{"version":3,"file":"index.mjs","sources":["../lib/inovar-md.js"],"sourcesContent":["\nexport class InovarMd extends HTMLElement {\n    get src() {\n      return this.getAttribute('src')\n    }\n  \n    set src(val) {\n      this.reflect('src', val)\n    }\n  \n    get manualRender() {\n      return this.hasAttribute('manual-render')\n    }\n  \n    set manualRender(val) {\n      this.reflect('manual-render', val)\n    }\n  \n    reflect(name, val) {\n      if (val === false) {\n        this.removeAttribute(name)\n      } else {\n        this.setAttribute(name, val === true ? '' : val)\n      }\n    }\n  \n    static get observedAttributes() {\n      return ['src']\n    }\n  \n    attributeChangedCallback(name, old, val) {\n      if (name === 'src' && this.connected && !this.manualRender && val !== old) {\n        this.render()\n      }\n    }\n  \n    constructor(defaults) {\n      super()\n      this.version = '$VERSION'\n      this.config = {\n        markedUrl: 'https://cdn.jsdelivr.net/gh/markedjs/marked@4/marked.min.js',\n        prismUrl: [\n        //   ['https://cdn.jsdelivr.net/gh/PrismJS/prism@1/prism.min.js', 'data-manual'],\n        //   'https://cdn.jsdelivr.net/gh/PrismJS/prism@1/plugins/autoloader/prism-autoloader.min.js',\n          'https://cdn.jsdelivr.net/gh/phothinmg/ptm@main/prism.js'\n        ],\n        cssUrls: [\n          'https://cdn.jsdelivr.net/gh/sindresorhus/github-markdown-css@4/github-markdown.min.css',\n        //   'https://cdn.jsdelivr.net/gh/PrismJS/prism@1/themes/prism.min.css',\n          'https://cdn.jsdelivr.net/gh/phothinmg/ptm@main/prism.css'\n        ],\n        hostCss:\n          ':host{display:block;position:relative;contain:content;}:host([hidden]){display:none;}',\n        ...defaults,\n        ...window.ZeroMdConfig\n      }\n      this.root = this.hasAttribute('no-shadow') ? this : this.attachShadow({ mode: 'open' })\n      this.root.prepend(\n        ...this.makeNodes(`<div class=\"markdown-styles\"></div><div class=\"markdown-body\"></div>`)\n      )\n      if (!this.constructor.ready) {\n        this.constructor.ready = Promise.all([\n          !!window.marked || this.loadScript(this.config.markedUrl),\n          !!window.Prism || this.loadScript(this.config.prismUrl)\n        ])\n      }\n      this.clicked = this.clicked.bind(this)\n      if (!this.manualRender) {\n        // Scroll to hash id after first render. However, `history.scrollRestoration` inteferes with this\n        // on refresh. It's much better to use a `setTimeout` rather than to alter the browser's behaviour.\n        this.render().then(() => setTimeout(() => this.goto(location.hash), 250))\n      }\n      this.observer = new MutationObserver(() => {\n        this.observeChanges()\n        if (!this.manualRender) this.render()\n      })\n      this.observer.observe(this, { childList: true })\n      this.observeChanges()\n    }\n  \n    /**\n     * Start observing changes, if not already so, in `template` and `script`.\n     */\n    observeChanges() {\n      this.querySelectorAll('template,script[type=\"text/markdown\"]').forEach((n) => {\n        this.observer.observe(n.content || n, {\n          childList: true,\n          subtree: true,\n          attributes: true,\n          characterData: true\n        })\n      })\n    }\n  \n    connectedCallback() {\n      this.connected = true\n      this.fire('inovar-md-connected', {}, { bubbles: false, composed: false })\n      this.waitForReady().then(() => {\n        this.fire('inovar-md-ready')\n      })\n      if (this.shadowRoot) {\n        this.shadowRoot.addEventListener('click', this.clicked)\n      }\n    }\n  \n    disconnectedCallback() {\n      this.connected = false\n      if (this.shadowRoot) {\n        this.shadowRoot.removeEventListener('click', this.clicked)\n      }\n    }\n  \n    waitForReady() {\n      const ready =\n        this.connected ||\n        new Promise((resolve) => {\n          this.addEventListener('inovar-md-connected', function handler() {\n            this.removeEventListener('inovar-md-connected', handler)\n            resolve()\n          })\n        })\n      return Promise.all([this.constructor.ready, ready])\n    }\n  \n    fire(name, detail = {}, opts = { bubbles: true, composed: true }) {\n      if (detail.msg) {\n        console.warn(detail.msg)\n      }\n      this.dispatchEvent(\n        new CustomEvent(name, {\n          detail: { node: this, ...detail },\n          ...opts\n        })\n      )\n    }\n  \n    tick() {\n      return new Promise((resolve) => requestAnimationFrame(resolve))\n    }\n  \n    // Coerce anything into an array\n    arrify(any) {\n      return any ? (Array.isArray(any) ? any : [any]) : []\n    }\n  \n    // Promisify an element's onload callback\n    onload(node) {\n      return new Promise((resolve, reject) => {\n        node.onload = resolve\n        node.onerror = (err) => reject(err.path ? err.path[0] : err.composedPath()[0])\n      })\n    }\n  \n    // Load a url or load (in order) an array of urls via <script> tags\n    loadScript(urls) {\n      return Promise.all(\n        this.arrify(urls).map((item) => {\n          const [url, ...attrs] = this.arrify(item)\n          const el = document.createElement('script')\n          el.src = url\n          el.async = false\n          attrs.forEach((attr) => el.setAttribute(attr, ''))\n          return this.onload(document.head.appendChild(el))\n        })\n      )\n    }\n  \n    // Scroll to selected element\n    goto(sel) {\n      let el\n      try {\n        el = this.root.querySelector(sel)\n      } catch {}\n      if (el) el.scrollIntoView()\n    }\n  \n    // Hijack same-doc anchor hash links\n    clicked(ev) {\n      if (ev.metaKey || ev.ctrlKey || ev.altKey || ev.shiftKey || ev.defaultPrevented) {\n        return\n      }\n      const a = ev.target.closest('a')\n      if (a && a.hash && a.host === location.host && a.pathname === location.pathname) {\n        this.goto(a.hash)\n      }\n    }\n  \n    dedent(str) {\n      str = str.replace(/^\\n/, '')\n      const match = str.match(/^\\s+/)\n      return match ? str.replace(new RegExp(`^${match[0]}`, 'gm'), '') : str\n    }\n  \n    getBaseUrl(src) {\n      const a = document.createElement('a')\n      a.href = src\n      return a.href.substring(0, a.href.lastIndexOf('/') + 1)\n    }\n  \n    // Runs Prism highlight async; falls back to sync if Web Workers throw\n    highlight(container) {\n      return new Promise((resolve) => {\n        const unhinted = container.querySelectorAll('pre>code:not([class*=\"language-\"])')\n        unhinted.forEach((n) => {\n          // Dead simple language detection :)\n          const lang = n.innerText.match(/^\\s*</)\n            ? 'markup'\n            : n.innerText.match(/^\\s*(\\$|#)/)\n            ? 'bash'\n            : 'js'\n          n.classList.add(`language-${lang}`)\n        })\n        try {\n          window.Prism.highlightAllUnder(container, true, resolve())\n        } catch {\n          window.Prism.highlightAllUnder(container)\n          resolve()\n        }\n      })\n    }\n  \n    /**\n     * Converts HTML string into HTMLCollection of nodes\n     * @param {string} html\n     * @returns {HTMLCollection}\n     */\n    makeNodes(html) {\n      const tpl = document.createElement('template')\n      tpl.innerHTML = html\n      return tpl.content.children\n    }\n  \n    /**\n     * Constructs the styles dom and returns HTML string\n     * @returns {string} `markdown-styles` string\n     */\n    buildStyles() {\n      const get = (query) => {\n        const node = this.querySelector(query)\n        return node ? node.innerHTML || ' ' : ''\n      }\n      const urls = this.arrify(this.config.cssUrls)\n      const html = `<style>${this.config.hostCss}</style>${get('template[data-merge=\"prepend\"]')}${\n        get('template:not([data-merge])') ||\n        urls.reduce((a, c) => `${a}<link rel=\"stylesheet\" href=\"${c}\">`, '')\n      }${get('template[data-merge=\"append\"]')}`\n      return html\n    }\n  \n    /**\n     * Constructs the markdown body nodes and returns HTML string\n     * @param {*} opts Markedjs options\n     * @returns {Promise<string>} `markdown-body` string\n     */\n    async buildMd(opts = {}) {\n      const src = async () => {\n        if (!this.src) return ''\n        const resp = await fetch(this.src)\n        if (resp.ok) {\n          const md = await resp.text()\n          return window.marked.parse(md, {\n            baseUrl: this.getBaseUrl(this.src),\n            ...opts\n          })\n        } else {\n          this.fire('inovar-md-error', {\n            msg: `[inovar-md] HTTP error ${resp.status} while fetching src`,\n            status: resp.status,\n            src: this.src\n          })\n          return ''\n        }\n      }\n      const script = () => {\n        const el = this.querySelector('script[type=\"text/markdown\"]')\n        if (!el) return ''\n        const md = el.hasAttribute('data-dedent') ? this.dedent(el.text) : el.text\n        return window.marked.parse(md, opts)\n      }\n      return (await src()) || script()\n    }\n  \n    /**\n     * Returns 32-bit DJB2a hash in base36\n     * @param {string} str\n     * @returns {string}\n     */\n    getHash(str) {\n      let hash = 5381\n      for (let index = 0; index < str.length; index++) {\n        hash = ((hash << 5) + hash) ^ str.charCodeAt(index)\n      }\n      return (hash >>> 0).toString(36)\n    }\n  \n    /**\n     * Insert or replace styles node in root from a HTML string. If there are external stylesheet\n     * links, wait for them to load.\n     * @param {string} html styles string\n     * @returns {Promise<boolean|undefined>} returns true if stamped\n     */\n    async stampStyles(html) {\n      const hash = this.getHash(html)\n      const target = this.root.querySelector('.markdown-styles')\n      if (target.getAttribute('data-hash') !== hash) {\n        target.setAttribute('data-hash', hash)\n        const nodes = this.makeNodes(html)\n        const links = [...nodes].filter(\n          (i) => i.tagName === 'LINK' && i.getAttribute('rel') === 'stylesheet'\n        )\n        target.innerHTML = ''\n        target.append(...nodes)\n        await Promise.all(links.map((l) => this.onload(l))).catch((err) => {\n          this.fire('inovar-md-error', {\n            msg: '[inovar-md] An external stylesheet failed to load',\n            status: undefined,\n            src: err.href\n          })\n        })\n        return true\n      }\n    }\n  \n    /**\n     * Insert or replace HTML body string into DOM\n     * @param {string} html markdown-body string\n     * @param {string[]} [classes] list of classes to apply to `.markdown-body` wrapper\n     * @returns {Promise<boolean|undefined>} returns true if stamped\n     */\n    async stampBody(html, classes) {\n      const names = this.arrify(classes)\n      const hash = this.getHash(html + JSON.stringify(names))\n      const target = this.root.querySelector('.markdown-body')\n      if (target.getAttribute('data-hash') !== hash) {\n        target.setAttribute('data-hash', hash)\n        names.unshift('markdown-body')\n        target.setAttribute('class', names.join(' '))\n        const nodes = this.makeNodes(html)\n        target.innerHTML = ''\n        target.append(...nodes)\n        await this.highlight(target)\n        return true\n      }\n    }\n  \n    async render(opts = {}) {\n      await this.waitForReady()\n      const pending = this.buildMd(opts)\n      const styles = await this.stampStyles(this.buildStyles())\n      await this.tick()\n      const body = await this.stampBody(await pending, opts.classes)\n      this.fire('inovar-md-rendered', { node: this, stamped: { styles, body } })\n    }\n  }\n  \n  customElements.define('inovar-md', InovarMd)"],"names":["InovarMd","_HTMLElement","_inherits","_super","_createSuper","defaults","_this$root","_this","_classCallCheck","call","version","config","_objectSpread","markedUrl","prismUrl","cssUrls","hostCss","window","ZeroMdConfig","root","hasAttribute","_assertThisInitialized","attachShadow","mode","prepend","apply","_toConsumableArray","makeNodes","constructor","ready","Promise","all","marked","loadScript","Prism","clicked","bind","manualRender","render","then","setTimeout","goto","location","hash","observer","MutationObserver","observeChanges","observe","childList","_createClass","key","get","getAttribute","set","val","reflect","value","name","removeAttribute","setAttribute","attributeChangedCallback","old","connected","_this2","querySelectorAll","forEach","n","content","subtree","attributes","characterData","connectedCallback","_this3","fire","bubbles","composed","waitForReady","shadowRoot","addEventListener","disconnectedCallback","removeEventListener","_this4","resolve","handler","detail","arguments","length","undefined","opts","msg","console","warn","dispatchEvent","CustomEvent","node","tick","requestAnimationFrame","arrify","any","Array","isArray","onload","reject","onerror","err","path","composedPath","urls","_this5","map","item","_this5$arrify","_this5$arrify2","_toArray","url","attrs","slice","el","document","createElement","src","async","attr","head","appendChild","sel","querySelector","_unused","scrollIntoView","ev","metaKey","ctrlKey","altKey","shiftKey","defaultPrevented","a","target","closest","host","pathname","dedent","str","replace","match","RegExp","concat","getBaseUrl","href","substring","lastIndexOf","highlight","container","unhinted","lang","innerText","classList","add","highlightAllUnder","_unused2","html","tpl","innerHTML","children","buildStyles","_this6","query","reduce","c","_buildMd","_asyncToGenerator","_regeneratorRuntime","mark","_callee2","_this7","script","_args2","wrap","_callee2$","_context2","prev","next","_ref","_callee","resp","md","_callee$","_context","abrupt","fetch","sent","ok","text","parse","baseUrl","status","stop","t0","buildMd","getHash","index","charCodeAt","toString","_stampStyles","_callee3","_this8","nodes","links","_callee3$","_context3","filter","i","tagName","append","l","catch","stampStyles","_x","_stampBody","_callee4","classes","names","_callee4$","_context4","JSON","stringify","unshift","join","stampBody","_x2","_x3","_render","_callee5","pending","styles","body","_args5","_callee5$","_context5","t1","t2","stamped","_wrapNativeSuper","HTMLElement","customElements","define"],"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"}